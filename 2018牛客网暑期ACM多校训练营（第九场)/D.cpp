#include <bits/stdc++.h>
using namespace std;
 
#define rep(i, n) for (int i = 0; i < n; i++)
#define Rep(i, n) for (int i = 1; i <= n; i++)
#define range(x) begin(x), end(x)
typedef long long LL;
LL mod = 1'000'000'007;
 
LL powmod(LL b, LL e) {
    LL r = 1;
    while (e) {
        if (e & 1) r = r * b % mod;
        b = b * b % mod;
        e >>= 1;
    }
    return r;
}
 
LL inv(LL x) {
    return powmod(x, mod - 2);
}
 
const LL init[12][512] = {
    {
 
    },  // k = 0
    {
 
    },  // k = 1
    {
        3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, 5461, 10923, 21845
    },  // k = 2
    {
        16, 41, 114, 379, 1088, 3249, 9922, 29459, 88464, 266137, 796658, 2391243, 7176448, 21520097, 64570626
    },  // k = 3
    {
        125, 434, 1583, 6208, 27349, 105250, 415031, 1670032, 6763277, \
        26819186, 107153375, 429519104, 720079646, 869029496, 479459690, \
        966041237, 873378588, 26705049, 662215595, 569526420, 541414988, \
        123408224, 782548350, 387150877, 139194078, 101337133, 929180230, \
        329525247, 554414574, 185211478, 89160762, 715666961, 370934265, \
        228301746, 441706289, 505015318, 629647919, 312118810, 902067010, \
        899062218, 274506125,
    },  // k = 4
    {
        1296, 5713, 26247, 123804, 622875, 3401861, 16443648, 80812057, \
        403126419, 31931486, 247694881, 862819783, 791760421, 229689119, \
        629747848, 93113576, 58281764, 420188225, 162727184, 14039033, \
        852998402, 825354325, 695836633, 936960936, 731421467, 795482557, \
        711505324, 476160740, 35522460, 16999065, 540912446, 318141288, \
        146375832
    },  // k = 5
    {
        16807, 90075, 498348, 2809263, 16358519, 100051200, 650589967, \
        788583498, 328970098, 63202744, 479469823, 551766328, 57305660, \
        794883363, 542687615, 295462526, 57010503, 769307890, 738278744, \
        426266343, 584239327, 151873328, 799180550, 898414878, 15594945, \
        388899265, 314122934, 690526404, 51519022, 145444489, 756345882, \
        360951241, 138188284, 292884706, 502773296, 967590337, 20363059, \
        57099986, 380053937, 664628769, 918151732, 34889393, 384557483, \
        437758543, 126143902, 620561184, 116061574, 480320005, 760159048, \
        213324031, 357850147, 762805629, 315712772, 65336841, 425317322, \
        822537021, 216996439, 934381685, 683113110, 81717007, 234380906, \
        421850094, 292576122, 657208489, 677124086
    },  // k = 6
    {
        262144, 1657009, 10737284, 70960451, 474461312, 279211760, 557161635, \
        475259200, 586933489, 597272936, 777971728, 405659680, 139647036, \
        472708933, 841498774, 124401612, 351818917, 824836628, 552977413, \
        501238458, 342837721, 493106207, 378601788, 20595921, 954336429, \
        764510041, 198021818, 464613011, 706177609, 558237403, 418874493, \
        257395981, 208381186, 243820673, 482477343, 384455368, 694076121, \
        756711754, 488385914, 844446559, 892714954, 734996537, 347527113, \
        832665318, 628311543, 839673822, 192492509, 966162994, 777554434, \
        212858388, 697169211, 314728909, 499922522, 671016919, 79833324, \
        570052987, 974965219, 443510391, 173287664, 80011336, 24515092, \
        871981137, 930185813, 584468586, 408382014, 449675388, 412378813, \
        396649416, 350259686, 176868367, 513987484, 24591450, 526994683, \
        679470485, 390302439, 890096628, 489363314, 546681752, 826553021, \
        596188061, 307372340, 769209353, 7146789, 769963358, 725707248, \
        498816202, 136421380, 703507759, 881255765, 305707507, 403580483, \
        275823704, 21095821, 126902979, 254985036, 587673487, 541088553, \
        719958154, 704991496, 641244456, 490224514, 578702549, 732540972, \
        774460339, 283953900, 165226622, 297706481, 505992700, 459014294, \
        571318068, 405790658, 229781179, 925469206, 937269774, 94561853, \
        811802667, 96531094, 293083701, 446135130, 559797336, 291923594, \
        882014586, 625572917, 657423742, 358558490, 220152362, 46480636, \
        444649608, 200164060
    },  // k = 7
};
 
vector<LL> feedback[12] = {
    {}, // k = 0
    {}, // k = 1
    {1, 2}, // k = 2
    {2, 2, 6, 999999998},    // k = 3
    {2, 2, 14, 55, 999999951, 32, 999999879, 999999751},    // k = 4
    {
        3, 2, 21, 65, 456, 999998659, 999999935, 999996691, 999999647, 999966307, 57000, 40625, 65625, 31250, 234375, 999609382
    },  // k = 5
    {
        3, 8, 3, 167, 798, 5600, 999980459, 999973531, 82548, 999608047, 999087455, 994774444, 10137309, 36913724, 928575140,
        146634557, 428549202, 328894057, 810341277, 227670401, 96004303, 712714373, 891843240, 530487099,
        998800036, 610583234, 487951342, 522647571, 817918232, 913308386, 445056149, 890112298
    },  // k = 6
    {
        4, 8, 4, 272, 1092, 8344, 81092, 999555631, 999518795, 1023720, 988506123, 992935607,
        852200971, 376558342, 875476001, 37651408, 4816488, 110779797, 279723813, 115955301, 620771070,
        967508197, 544211671, 635773825, 106452081, 254594794, 376063298, 416492100, 411154390, 888087868,
        906075499, 704029977, 342528451, 516305231, 25954783, 997525107, 495805246, 822709642, 865529314,
        556478062, 742620976, 944036241, 399454407, 384608217, 127579218, 994535025, 836330017, 853314144,
        534826008, 298326110, 120799656, 154745013, 563084840, 694660186, 954519108, 794364363, 524456407,
        203132858, 521661983, 935205509, 375682922, 259560873, 408463052, 285189666
    }   // k = 7
};
 
const int MAXN = 80;
int n;
struct matrix {
    LL m[MAXN][MAXN];
 
    void operator *=(matrix& a) {
        static LL t[MAXN][MAXN];
        rep (i, n) {
            rep (j, n) {
                t[i][j] = 0;
                rep (k, n) {
                    t[i][j] += (m[i][k] * a.m[k][j]) % mod;
                    t[i][j] %= mod;
                }
            }
        }
        memcpy(m, t, sizeof t);
    }
};
 
matrix r;
void m_powmod(matrix& b, LL e) {
    memset(r.m, 0, sizeof(r.m));
    rep (i, n) r.m[i][i] = 1;
    while (e) {
        if (e & 1) r *= b;
        b *= b;
        e >>= 1;
    }
}
 
matrix tr;
 
int main() {
    int k, N; cin >> k >> N;
    int rn = N;
    if (k == 1) {
        cout << 1 << endl;
    } else {
        n = feedback[k].size();
        rep (i, n) tr.m[0][i] = feedback[k][i];
        Rep (i, n-1) tr.m[i][i-1] = 1;
/*
        rep (i, n) {
            rep (j, n) {
                printf("%lld\t", tr.m[i][j]);
            }
            puts("");
        }
*/
        N -= k + 1;
        m_powmod(tr, N);
/*
        rep (i, n) {
            rep (j, n) {
                printf("%lld\t", r.m[i][j]);
            }
            puts("");
        }
*/
        LL res = 0;
        rep (i, n) {
            res += r.m[n-1][i] * init[k][n-1-i] % mod;
            res %= mod;
        }
        LL fact = 1;
        for (int i = 1; i < k; i++) fact = fact * i % mod;
        fact = powmod(fact, rn);
        cout << fact * res % mod << endl;
    }
    return 0;
}
